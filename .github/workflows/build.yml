name: build

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  check-version-strings:
    runs-on: ubuntu-latest
    container: python:3.9.18-slim-bullseye

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install pyyaml
      - name: Test versions
        run: |
          python deploy/check_version.py

#-------------------------------------------------------------------------------
# PyPI / Linux
#-------------------------------------------------------------------------------
  build-pypi-linux:
    needs: check-version-strings
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
      - name: Install dependencies
        run: |
          yum -y install libgomp glm-devel gcc
          ls -alh /opt/python/cp*
          /opt/python/cp37-cp37m/bin/python -m pip install numpy tqdm cython pytest
          /opt/python/cp38-cp38/bin/python -m pip install numpy tqdm cython pytest
          /opt/python/cp39-cp39/bin/python -m pip install numpy tqdm cython pytest
          /opt/python/cp310-cp310/bin/python -m pip install numpy tqdm cython pytest
          /opt/python/cp311-cp311/bin/python -m pip install numpy tqdm cython pytest
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Build
        run: ./deploy/docker_setup_github.sh
      - name: Test
        run: ./deploy/docker_test_github.sh
      - name: Archive wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse/pytessel-*.whl

  pypi-publish:
    name: Upload release to PyPI
    if: github.ref == 'refs/heads/master'
    needs: build-pypi-linux
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pytessel
    permissions:
      id-token: write
    steps:
      - name: Retrieve packages
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/

#-------------------------------------------------------------------------------
# Anaconda / Windows
#-------------------------------------------------------------------------------
  build-anaconda-windows:
    needs: check-version-strings
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set-up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Set-up MSVC toolchain
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
      - name: Download GLM
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: "https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip"
      - name: Unzip GLM
        shell: bash -l {0}
        run: |
          7z x glm-0.9.9.8.zip
      - name: Build
        shell: bash -l {0}
        run: |
          echo $PATH
          conda build . --no-include-recipe
      - name: Archive packages
        uses: actions/upload-artifact@v3
        with:
          name: anaconda-windows-packages
          path: C:\Miniconda\envs\test\conda-bld\win-64\pytessel-*.tar.bz2

  anaconda-publish:
    name: Publish Anaconda / Windows
    if: github.ref == 'refs/heads/master'
    needs: build-anaconda-windows
    runs-on: ubuntu-latest
    environment:
      name: anaconda
      url: https://anaconda.org/ifilot/pytessel
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set-up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Retrieve packages
        uses: actions/download-artifact@v3
        with:
          name: anaconda-windows-packages
          path: packages
      - name: publish-to-conda
        shell: bash -l {0}
        env:
          INPUT_ANACONDATOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          export ANACONDA_API_TOKEN=$INPUT_ANACONDATOKEN
          anaconda upload packages/*.tar.bz2

#-------------------------------------------------------------------------------
# Anaconda / Linux
#-------------------------------------------------------------------------------
  build-anaconda-linux:
    needs: check-version-strings
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libglm-dev libboost-all-dev
      - name: Set-up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Build
        run: |
          conda install conda-build
          conda build . --no-include-recipe
      - name: Archive packages
        uses: actions/upload-artifact@v3
        with:
          name: anaconda-linux-packages
          path: /usr/share/miniconda/conda-bld/linux-64/pytessel-*.tar.bz2

  publish-anaconda-linux:
    name: Publish Anaconda / Linux
    if: github.ref == 'refs/heads/master'
    needs: build-anaconda-linux
    runs-on: ubuntu-latest
    environment:
      name: anaconda
      url: https://anaconda.org/ifilot/pytessel
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set-up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Retrieve packages
        uses: actions/download-artifact@v3
        with:
          name: anaconda-linux-packages
          path: packages
      - name: publish-to-conda
        shell: bash -l {0}
        env:
          INPUT_ANACONDATOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          export ANACONDA_API_TOKEN=$INPUT_ANACONDATOKEN
          anaconda upload packages/*.tar.bz2

#-------------------------------------------------------------------------------
# Anaconda / MacOSx
#-------------------------------------------------------------------------------
  build-anaconda-macos:
    needs: check-version-strings
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          brew install glm
          brew install boost
      - name: Set-up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Build
        run: |
          conda install conda-build
          conda build . --no-include-recipe
      - name: Archive packages
        uses: actions/upload-artifact@v3
        with:
          name: anaconda-macos-packages
          path: /usr/local/miniconda/conda-bld/osx-64/pytessel-*.tar.bz2

  publish-anaconda-macos:
    name: Publish Anaconda / MacOS
    if: github.ref == 'refs/heads/master'
    needs: build-anaconda-macos
    runs-on: ubuntu-latest
    environment:
      name: anaconda
      url: https://anaconda.org/ifilot/pytessel
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set-up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          environment-file: environment.yml
          python-version: 3.8
          auto-activate-base: false
      - name: Retrieve packages
        uses: actions/download-artifact@v3
        with:
          name: anaconda-macos-packages
          path: packages
      - name: publish-to-conda
        shell: bash -l {0}
        env:
          INPUT_ANACONDATOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          export ANACONDA_API_TOKEN=$INPUT_ANACONDATOKEN
          anaconda upload packages/*.tar.bz2
